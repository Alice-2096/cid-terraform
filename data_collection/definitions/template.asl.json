{
  "Comment": "Orchestrate the collection of ${module_name} data",
  "StartAt": "AccountCollectorInvoke",
  "States": {
    "AccountCollectorInvoke": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload": {
          "Type": "${type}"
        },
        "FunctionName": "arn:aws:lambda:us-east-1:${account_id}:function:CID-DC-account-collector-Lambda"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "AccountMap",
      "ResultPath": "$.accountLambdaOutput"
    },
    "AccountMap": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "DISTRIBUTED",
          "ExecutionType": "STANDARD"
        },
        "StartAt": "InvokeModuleLambda",
        "States": {
          "InvokeModuleLambda": {
            "Type": "Task",
            "Resource": "arn:aws:states:us-east-1:${account_id}:lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "Payload": {
                "account.$": "$.account",
                "params": "${params}"
              },
              "FunctionName": "arn:aws:lambda:us-east-1:${account_id}:function:CID-DC-${module_name}-Lambda"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 2,
                "MaxAttempts": 6,
                "BackoffRate": 2
              }
            ],
            "End": true
          }
        }
      },
      "MaxConcurrency": 60,
      "ItemReader": {
        "Resource": "arn:aws:states:::s3:getObject",
        "ReaderConfig": {
          "InputType": "JSON"
        },
        "Parameters": {
          "Bucket.$": "$.accountLambdaOutput.Payload.bucket",
          "Key.$": "$.accountLambdaOutput.Payload.accountList"
        }
      },
      "Next": "CrawlerStepFunctionStartExecution"
    },
    "CrawlerStepFunctionStartExecution": {
      "Type": "Task",
      "Resource": "arn:aws:states:::states:startExecution.sync:2",
      "Parameters": {
        "StateMachineArn": "arn:aws:states:us-east-1:${account_id}:stateMachine:CID-DC-CrawlerExecution-StateMachine",
        "Input": {
          "crawlers": ["${crawler}"]
        }
      },
      "End": true
    }
  },
  "TimeoutSeconds": 1200
}
